<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fw.core.mapper.db1.hh.HhPositionMapper">

    <!-- 포지션 관리 - 포지션 리스트 개수 -->
    <select id="selectHhPositionCount" resultType="int" parameterType="HhPositionDTO">
        /* com.fw.core.mapper.db1.hh.HhPositionMapper.selectHhPositionCount, 포지션 관리 - 포지션 리스트 개수, sjpaik, HhPositionMapper.xml */
        SELECT COUNT(1)
          FROM position p
         WHERE p.member_id = #{frontSession.id}
           AND p.status IN <foreach collection="statusList" item="item" open="(" close=")" separator=",">#{item}</foreach>
           AND p.deleted != 1
        <if test="searchValue != null and searchValue != ''">
            <choose>
                <when test="searchType eq 'TITLE'">
                    AND p.title LIKE CONCAT('%', #{searchValue}, '%')
                </when>
                <when test="searchType eq 'REGID'">
                    AND (SELECT name FROM member WHERE id = p.member_id) LIKE CONCAT('%', #{searchValue}, '%')
                </when>
                <when test="searchType eq 'COWORK'">
                    AND CONCAT('%', #{searchValue}, '%') IN (SELECT name FROM member WHERE id = p.member_id)
                </when>
            </choose>
        </if>
    </select>

    <!-- 포지션 관리 - 포지션 리스트 -->
    <select id="selectHhPositionList" resultType="HhPositionDTO" parameterType="HhPositionDTO">
        /* com.fw.core.mapper.db1.hh.HhPositionMapper.selectHhPositionList, 포지션 관리 - 포지션 리스트, sjpaik, HhPositionMapper.xml */
        SELECT p.id -- 포지션 아이디
             , p.title -- 포지션 제목
             , p.status AS statusCd -- 포지션 상태
             , fn_get_common_cd(p.status, 'POSITION_STATUS', 1) AS status   -- 포지션 상태 코드 값
             , p.end_add_cnt    -- 마감 연장 횟수
             , p.isPrivate  -- 선택 공개 여부
             , DATE_FORMAT(p.createdAt, '%Y-%m-%d') AS createdAt -- 등록일
             , DATE_FORMAT(p.endDate, '%Y-%m-%d') AS endDate -- 만료일
             , TIMESTAMPDIFF(DAY, DATE_FORMAT(NOW(),'%Y-%m-%d'), DATE_FORMAT(p.endDate,'%Y-%m-%d')) AS dDay -- D-DAY
             , (
                    CASE WHEN p.isCowork = '1' AND p.member_id != #{frontSession.id}    /* CO일때 */
                         THEN (SELECT name FROM member WHERE id = p.member_id)
                         ELSE (SELECT name FROM member WHERE id = #{frontSession.id})   /* PM/단독일때 */
                     END
               ) AS manager -- 담당자
             , (
                    CASE WHEN p.isCowork = '1' AND p.member_id = #{frontSession.id} THEN 'PM'
                         WHEN p.isCowork = '1' AND p.member_id != #{frontSession.id} THEN 'CO'
                         ELSE '단독'
                     END
               ) AS hhPositionType -- 단독, PM, CO 여부
             , (SELECT COUNT(1) FROM position_applicant WHERE position_id = p.id AND hh_member_id = #{frontSession.id} AND (regPath = '1' OR (regPath = '3' AND proposedEamil = '1'))) AS contactCnt -- 포지션 제안 COUNT
             , (SELECT COUNT(1) FROM position_applicant WHERE position_id = p.id AND hh_member_id = #{frontSession.id} AND regPath = '2') +
               (SELECT COUNT(1) FROM position_applicant WHERE position_id = p.id AND hh_member_id = #{frontSession.id} AND ((regPath = '1' AND proposalStatus = 'ACCEPT') OR (regPath = '3' AND proposalStatus = 'ACCEPT'))) AS resumeCnt -- 이력서 접수 COUNT
             , (SELECT COUNT(1) FROM position_applicant WHERE position_id = p.id AND hh_member_id = #{frontSession.id} AND regPath = '2') AS directCnt -- 직접지원 CO COUNT
             , (SELECT COUNT(1) FROM position_participant WHERE position_id = p.id AND stoped = 0) AS coCnt -- 참여 CO COUNT
             , (SELECT companyScale FROM hr_company AS hc WHERE hc.id = p.hr_company_id) AS companyScale
             , (SELECT COUNT(1) FROM position_applicant WHERE position_id = p.id AND hh_member_id = #{frontSession.id} AND progressStep NOT IN ('PASS','FAIL') AND processStatus NOT IN ('FAIL','DOCUMENT_FAIL')) AS remainCnt -- (종료) 전형중인 남은인원 COUNT
          FROM position p
         WHERE (p.member_id = #{frontSession.id}
                    OR p.id IN (SELECT position_id FROM position_participant WHERE member_id = #{frontSession.id} AND stoped = 0))
           AND p.status IN <foreach collection="statusList" item="item" open="(" close=")" separator=",">#{item}</foreach>
           AND p.deleted != 1
        <if test="searchValue != null and searchValue != ''">
            <choose>
               <when test="searchType eq 'TITLE'">
                   AND p.title LIKE CONCAT('%', #{searchValue}, '%')
               </when>
               <when test="searchType eq 'REGID'">
                   AND (SELECT name FROM member WHERE id = p.member_id) LIKE CONCAT('%', #{searchValue}, '%')
               </when>
               <when test="searchType eq 'COWORK'">
                   AND CONCAT('%', #{searchValue}, '%') IN (SELECT name FROM member WHERE id = p.member_id)
               </when>
            </choose>
        </if>
      ORDER BY p.createdAt DESC, p.title DESC
    </select>

    <!-- 포지션 등록 -->
    <insert id="insertPosition" parameterType="HhPositionDTO">
        /* com.fw.core.mapper.db1.hh.HhPositionMapper.insertPosition, 포지션 관리 - 포지션 등록, sjpaik, HhPositionMapper.xml */
        INSERT INTO `position` (
               createdAt
             , deleted
             , endDate
             , etc
             , feeInfo
             , industry
             , isCowork
             , isPrivate
             , jobDescription
             , pmComment
             , status
             , stopReason
             , title
             , warrantyTerm
             , hr_company_id
             , member_id
             , keywords
             , jopDescription
             , delFlag
             , end_add_cnt
             , team
             , salary
             , target_company
             , direct_position_flag
             , etc_comment
             , public_cd
             , position_reason
        ) VALUES (
               NOW()
             , 0
             , #{endDate}
             , #{etc}
             , #{feeInfo}
             , #{industry}
             , #{isCowork}
             , #{isPrivate}
             , #{jobDescription}
             , #{pmComment}
             , 'DOING'
             , #{stopReason}
             , #{title}
             , #{warrantyTerm}
             , #{hrCompanyId}
             , #{frontSession.id}
             , #{keywords}
             , #{jopDescription}
             , 'N'
             , 0
             , #{team}
             , #{salary}
             , #{targetCompany}
             , #{directPositionFlag}
             , #{etcComment}
             , #{publicCd}
             , #{positionReason}
        )
        <selectKey order="AFTER" keyProperty="id" resultType="String">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <!-- 포지션 기업소개 등록 -->
    <insert id="insertPositionCompanyInfo" parameterType="HhPositionDTO">
        /* com.fw.core.mapper.db1.hh.HhPositionMapper.insertPositionCompanyInfo, 포지션 관리 - 포지션 기업소개 등록, sjpaik, HhPositionMapper.xml */
        INSERT INTO position_company_intro (
               createdAt
             , introUrl
             , introFileId
             , position_id
             , delFlag
        ) VALUES (
               NOW()
             , #{introUrl}
             , #{introFileId}
             , #{positionId}
             , 'N'
        )
    </insert>

    <!-- 포지션 기업소개 조회 -->
    <select id="selectPositionCompanyInfo" parameterType="HhPositionDTO" resultType="HhPositionDTO">
        /* com.fw.core.mapper.db1.hh.HhPositionMapper.selectPositionCompanyInfo, 포지션 기업소개 조회 , YJW, HhPositionMapper.xml */
        SELECT id
             , createdAt
             , updatedAt
             , introUrl
             , introFileId
             , position_id
             , delFlag
        FROM position_company_intro
        WHERE delFlag = 'N'
          AND id = #{positionId}
    </select>

    <!-- 포지션 참가자 등록 -->
    <insert id="insertPositionParticipant" parameterType="HhPositionDTO">
        /* com.fw.core.mapper.db1.hh.HhPositionMapper.insertPositionParticipant, 포지션 관리 - 포지션 참가자 등록, sjpaik, HhPositionMapper.xml */
        INSERT INTO position_participant (
               createdAt
             , stoped
             , member_id
             , position_id
             , delFlag
        ) VALUES (
               NOW()
             , 0
             , #{memberId}
             , #{positionId}
             , 'N'
        )
    </insert>

    <!-- 기등록 포지션 조회 -->
    <select id="selectRegPositionList" parameterType="HhPositionDTO" resultType="HhPositionDTO">
        /* com.fw.core.mapper.db1.hh.HhPositionMapper.selectRegPositionList, 기등록 포지션 조회, sjpaik, HhPositionMapper.xml */
        SELECT id
             , createdAt
             , updatedAt
             , deleted
             , endDate
             , etc
             , feeInfo
             , industry
             , isCowork
             , isPrivate
             , jobDescription
             , pmComment
             , status
             , stopReason
             , title
             , warrantyTerm
             , hr_company_id
             , member_id
             , keywords
             , jopDescription
             , delFlag
             , end_add_cnt
             , team
             , salary
             , target_company
             , direct_position_flag
             , etc_comment
             , public_cd
             , position_reason
          FROM position
         WHERE member_id = #{frontSession.id}
           AND hr_company_id = #{hrCompanyId}
    </select>

    <!-- We펌 코워커 리스트 조회 -->
    <select id="selectWeFirmCoworkerList" parameterType="HhPositionDTO" resultType="HhPositionDTO">
        /* com.fw.core.mapper.db1.hh.HhPositionMapper.selectWeFirmCoworkerList, We펌 코워커 리스트 조회, sjpaik, HhPositionMapper.xml */
        SELECT id
             , email
             , name
          FROM headhunter h
    INNER JOIN member m on h.member_id = m.id
         WHERE h.wefirm_id = (SELECT wefirm_id FROM headhunter WHERE member_id = #{frontSession.id})
        <if test="searchValue != null and searchValue != ''">
           AND name LIKE CONCAT('%', #{searchValue}, '%')
           AND m.id != #{frontSession.id}
        </if>
    </select>

    <!-- 포지션 상세 -->
    <select id="selectPosition" parameterType="HhPositionDTO" resultType="HhPositionDTO">
        /* com.fw.core.mapper.db1.hh.HhPositionMapper.selectPosition, 포지션 상세, sjpaik, HhPositionMapper.xml */
        SELECT p.id
             , p.createdAt
             , p.updatedAt
             , p.deleted
             , p.endDate
             , p.etc
             , p.feeInfo
             , p.industry
             , p.isCowork
             , p.isPrivate
             , p.jobDescription
             , p.pmComment
             , p.status
             , p.stopReason
             , p.title
             , p.warrantyTerm
             , p.hr_company_id
             , p.member_id
             , p.keywords
             , p.jopDescription
             , p.delFlag
             , p.end_add_cnt
             , p.team
             , p.salary
             , p.target_company
             , p.direct_position_flag
             , p.etc_comment
             , p.public_cd
             , p.position_reason
             , (SELECT companyName FROM hr_company WHERE id = p.hr_company_id AND delFlag = 'N') AS companyName
             , (
                    CASE WHEN p.isCowork = '1' AND p.member_id != #{frontSession.id}    /* CO일때 */
                         THEN (SELECT name FROM member WHERE id = p.member_id)
                         ELSE (SELECT name FROM member WHERE id = #{frontSession.id})   /* PM/단독일때 */
                     END
               ) AS manager -- 담당자
             , (
                    CASE WHEN p.isCowork = '1' AND p.member_id = #{frontSession.id} THEN 'PM'
                         WHEN p.isCowork = '1' AND p.member_id != #{frontSession.id} THEN 'CO'
                         ELSE '단독'
                     END
               ) AS hhPositionType -- 단독, PM, CO 여부
          FROM position p
         WHERE id = #{id}
    </select>

    <!-- 포지션 지원자 리스트 -->
    <select id="selectPositionApplicant" parameterType="HhPositionDTO" resultType="HhPositionDTO">
        /* com.fw.core.mapper.db1.hh.HhPositionMapper.selectPositionApplicant, 포지션 지원자 리스트, sjpaik, HhPositionMapper.xml */
        SELECT pa.id
             , DATE_FORMAT(pa.createdAt, '%Y-%m-%d') AS createdAt
             , pa.updatedAt
             , DATE_FORMAT(pa.changeAt, '%Y-%m-%d') AS changeAt
             , pa.hhTempStatus
             , pa.hrCheckedAt
             , pa.hrTempStatus
             , pa.joinDate
             , pa.joinMailSubmitDate
             , pa.passedStatus
             , pa.phoneOpened
             , pa.pmSubmitted
             , pa.processStatus
             , pa.progressStep
             , DATE_FORMAT(pa.proposalAt, '%Y-%m-%d') AS proposalAt
             , pa.proposalStatus
             , fn_get_common_cd(pa.passedStatus, 'POSITION_PASSEDSTATUS', 1)  AS passedStatusNm
             , fn_get_common_cd(pa.processStatus, 'POSITION_PROCESSSTATUS', 1)  AS processStatusNm
             , fn_get_common_cd(pa.proposalStatus, 'POSITION_PROPOSALSTATUS', 1)  AS proposalStatusNm
             , fn_get_common_cd(pa.progressStep, 'POSITION_PROGRESSSTEP', 1)  AS progressStepNm
             , pa.proposedEamil
             , pa.proposedSms
             , pa.receiptPath
             , (CASE WHEN pa.receiptPath = 'CO' THEN 'CO접수'
                     WHEN pa.receiptPath = 'DIRECT' THEN '본인지원'
                     WHEN pa.receiptPath = 'MANUAL' THEN '등록대행'
                     WHEN pa.receiptPath = 'PROPOSAL_ACCEPT' THEN '제안승인'
                END) AS receiptPathNm
             , pa.receiptStatus
             , pa.regPath
             , (CASE WHEN pa.regPath = '1' THEN '내인재'
                     WHEN pa.regPath = '2' THEN '직접지원'
                     WHEN pa.regPath = '3' THEN '수동입력'
                END) AS regPathNm
             , (
                 CASE WHEN pa.pmSubmitted = '0' THEN 'PM미제출'
                      WHEN pa.pmSubmitted = '1' AND pa.receiptStatus = 'UNOPENED' THEN 'PM제출(미열람)'
                      WHEN pa.pmSubmitted = '1' AND pa.receiptStatus IN ('OPEN', 'RECOMMENDED') THEN 'PM제출(열람)'
                      ELSE 'PM미제출'
                END) AS pmSubmitStatusNm
             , pa.rejectReason
             , pa.rejectReasonCd
             , pa.resultNoticed
             , pa.updateRequest
             , pa.ap_member_id
             , pa.hh_member_id
             , pa.position_id
             , pa.resume_id
             , pa.submit_resume_file_id
             , pa.resume_file_id
             , pa.agree_file_id
             , pa.delFlag
             , pa.resume_modify_flag
             , YEAR(r.birth) AS year
             , LEFT(DATE_FORMAT(NOW(), '%Y%m%d') - r.birth, 2)  AS age
             , m.name
             , m.email
             , m.phone
             , m.isTemp
             , m.id AS memberId
          FROM position_applicant pa
     LEFT JOIN resume r ON pa.resume_id = r.id
    INNER JOIN member m ON pa.ap_member_id = m.id
         WHERE pa.position_id = #{id}
           AND (pa.hh_member_id = #{frontSession.id} OR pa.receiptPath = 'CO')
        <choose>
            <when test="mode eq 'CONTACT'">
                AND (pa.receiptPath != 'CO' OR pa.receiptPath IS NULL)
            </when>
            <otherwise>
                AND (pa.progressStep IN ('PROCESS', 'PASS', 'REGISTER') OR (pa.progressStep IN ('PROPOSAL') AND pa.regPath = '3' AND pa.proposalStatus = 'PROPOSAL')
                     OR (pa.progressStep = 'FAIL' AND pa.processStatus = 'FAIL'))
            </otherwise>
        </choose>
        <choose>
            <when test="searchType eq 'NOTHING'"><!-- 제안전 -->
                AND regPath IN (1,3) AND (proposalStatus IS NULL OR proposalStatus IN ('UNDER_REVIEW'))
            </when>
            <when test="searchType eq 'PROPOSAL'"><!-- 제안중 -->
                AND regPath IN (1,3) AND proposalStatus = 'PROPOSAL'
            </when>
            <when test="searchType eq 'REJECT'"><!-- 제안거부 -->
                AND regPath IN (1,3) AND proposalStatus = 'REJECT'
            </when>
            <when test="searchType eq 'ACCEPT'"><!-- 제안승인 -->
                AND regPath IN (1,3) AND proposalStatus = 'ACCEPT'
            </when>
            <when test="searchType eq 'OK'"><!-- 적합 -->
                AND regPath IN (2) AND progressStep IN ('REGISTER', 'PROCESS' , 'PASS')
            </when>
            <when test="searchType eq 'NO'"><!-- 부적합 -->
                AND regPath IN (2) AND processStatus IN ('FAIL')
            </when>
        </choose>
        <choose>
            <when test="searchType2 eq 'NOTHING'"><!-- 전형전 -->
                AND ((pa.progressStep IN ('REGISTER') AND pa.regPath = '2' AND pa.processStatus = 'READY')
                OR (pa.progressStep IN ('PROPOSAL') AND pa.regPath = '3' AND pa.proposalStatus = 'PROPOSAL')
                OR (pa.progressStep IN ('REGISTER') AND pa.regPath = '1' AND pa.proposalStatus = 'ACCEPT'))
            </when>
            <when test="searchType2 eq 'ING'"><!-- 전형중 -->
                AND pa.progressStep IN ('PROCESS') AND processStatus != 'DOCUMENT_FAIL' AND processStatus != 'FAIL'
            </when>
            <when test="searchType2 eq 'DOCUMENT_FAIL'"><!-- 서류탈락 -->
                AND pa.progressStep IN ('PROCESS') AND processStatus = 'DOCUMENT_FAIL'
            </when>
            <when test="searchType2 eq 'FAIL'"><!-- 최종탈락 -->
                AND progressStep = 'FAIL' AND processStatus = 'FAIL'
            </when>
            <when test="searchType2 eq 'DOCUMENT_PASS'"><!-- 서류통과 -->
                AND processStatus = 'PROCESS' AND processStatus = 'DOCUMENT_PASS'
            </when>
            <when test="searchType2 eq 'PASS'"><!-- 최종합격 -->
                AND processStatus = 'PASS'
            </when>
        </choose>
    </select>

    <!-- 포지션 연장 -->
    <update id="updatePositionDeadline" parameterType="HhPositionDTO">
        /* com.fw.core.mapper.db1.hh.HhPositionMapper.updatePositionDeadline, 포지션 연장, sjpaik, HhPositionMapper.xml */
        UPDATE position
           SET endDate = #{endDate}
             , end_add_cnt = IFNULL(end_add_cnt, 0) + 1
        WHERE id = #{positionId}
    </update>

    <!-- 포지션 Co-worker 리스트 -->
    <select id="selectPositionCoworkerList" parameterType="HhPositionDTO" resultType="HhPositionDTO">
        /* com.fw.core.mapper.db1.hh.HhPositionMapper.selectPositionCoworkerList, 포지션 Co-worker 리스트, sjpaik, HhPositionMapper.xml */
        SELECT DATE_FORMAT(pp.createdAt, '%Y/%m/%d') AS created_at
             , m.name
             , m.loginId
             , (SELECT COUNT(1) FROM position_applicant WHERE position_id = pp.position_id AND hh_member_id = pp.member_id) AS resumeCnt -- 직접 수정 COUNT
          FROM position_participant pp
    INNER JOIN member m ON pp.member_id = m.id
         WHERE pp.position_id = #{id}
           AND stoped = 0
    </select>
	
	<!-- 포지션(채용공고) 채용현황 조회 -->
    <select id="selectPositionStatus" parameterType="HhPositionDTO" resultType="HhPositionDTO">
        /* com.fw.core.mapper.db1.api.HhPositionMapper.selectPositionStatus, 채용현황 조회, wsh, HhPositionMapper.xml */
           SELECT
        (SELECT COUNT(*)
           FROM position WHERE deleted = 0
                           AND member_id = #{frontSession.id}
                           AND status IN ('DOING')
                       ) AS progressCnt
        , (SELECT COUNT(*)
             FROM position WHERE deleted = 0
                             AND member_id = #{frontSession.id}
                             AND status IN ('END','CLOSE')
                         ) AS closedCnt
        , (SELECT COUNT(1) FROM position_applicant WHERE hh_member_id = #{memberId} AND DATE_FORMAT(createdAt, '%Y%m%d') = DATE_FORMAT(NOW(), '%Y%m%d') AND regPath = '2') +
          (SELECT COUNT(1) FROM position_applicant WHERE hh_member_id = #{memberId} AND DATE_FORMAT(createdAt, '%Y%m%d') = DATE_FORMAT(NOW(), '%Y%m%d') AND ((regPath = '1' AND proposalStatus = 'ACCEPT') OR (regPath = '3' AND proposalStatus = 'ACCEPT'))) AS applyCnt
        	,(SELECT COUNT(1)
			 FROM position_applicant pa
	   INNER JOIN position p ON pa.position_id = p.id
			WHERE hh_member_id =  #{frontSession.id}
  			  AND changeAt IS NULL
  			  AND p.deleted = 0
  			  AND p.status IN ('DOING'))AS uncollectedCnt
    </select>

    <!-- 포지션 종료 -->
    <update id="updatePositionEnd" parameterType="HhPositionDTO">
        /* com.fw.core.mapper.db1.api.HhPositionMapper.updatePositionEnd, 포지션 종료, sjpaik, HhPositionMapper.xml */
        UPDATE position
           SET status = #{status}
             , stopReason = #{stopReason}
         WHERE id = #{positionId}
    </update>

    <!-- 코웤 종료 -->
    <update id="updateCoworkerEnd" parameterType="HhPositionDTO">
        /* com.fw.core.mapper.db1.api.HhPositionMapper.updateCoworkerEnd, 코웤 종료, sjpaik, HhPositionMapper.xml */
        UPDATE position_participant
           SET stoped = 1
         WHERE member_id = #{memberId}
           AND position_id = #{positionId}
    </update>

    <!-- 컨택리스트 삭제 -->
    <update id="deleteContactList" parameterType="HhPositionDTO">
        /* com.fw.core.mapper.db1.api.HhPositionMapper.deleteContactList, 컨택리스트 삭제, sjpaik, HhPositionMapper.xml */
        DELETE FROM position_applicant
         WHERE id IN <foreach collection="idList" item="item" open="(" separator="," close=")">#{item.id}</foreach>
    </update>

    <!-- 컨택리스트 변경 처리 -->
    <update id="updateProposalStatus" parameterType="HhPositionDTO">
        /* com.fw.core.mapper.db1.api.HhPositionMapper.updateContactStatus, 컨택리스트 변경 처리, sjpaik, HhPositionMapper.xml */
        UPDATE position_applicant
           SET proposalStatus = #{proposalStatus}
             , updatedAt = NOW()
             , changeAt = NOW()
         <if test="proposedEamil != null and proposedEamil != ''">
             , proposedEamil = #{proposedEamil}
             , proposalAt = NOW()
         </if>
         WHERE id = #{id}
    </update>

    <!-- 전형 단계 변경 처리 -->
    <update id="updateProgressStep" parameterType="HhPositionDTO">
        /* com.fw.core.mapper.db1.api.HhPositionMapper.updateProgressStep, 전형 단계 변경 처리, sjpaik, HhPositionMapper.xml */
        UPDATE position_applicant
           SET progressStep = #{progressStep}
             , updatedAt = NOW()
             , changeAt = NOW()
         WHERE id = #{id}
    </update>

    <!-- 진행 단계 변경 처리 -->
    <update id="updateProgressStatus" parameterType="HhPositionDTO">
        /* com.fw.core.mapper.db1.api.HhPositionMapper.updateProgressStatus, 진행 단계 변경 처리, sjpaik, HhPositionMapper.xml */
        UPDATE position_applicant
           SET processStatus = #{processStatus}
             , updatedAt = NOW()
        WHERE id = #{id}
    </update>

    <!-- 포지션 지원자 특정 조회 -->
    <select id="selectPositionApplicantBySpecial" parameterType="HhPositionDTO" resultType="HhPositionDTO">
        /* com.fw.core.mapper.db1.hh.HhPositionMapper.selectPositionApplicantBySpecial, 포지션 지원자 특정 조회, sjpaik, HhPositionMapper.xml */
        SELECT m.name
             , m.email
             , m.phone
             , p.title
             , pa.id
             , pa.regPath
             , m.id AS member_id
          FROM position_applicant pa
     LEFT JOIN resume r ON pa.resume_id = r.id
    INNER JOIN member m ON pa.ap_member_id = m.id
    INNER JOIN position p ON p.id = pa.position_id
        WHERE pa.id IN <foreach collection="idList" item="item" open="(" separator="," close=")">#{item.id}</foreach>
    </select>

    <!-- 포지션 지원자 상태 변경 -->
    <update id="updatePositionApplicant" parameterType="HhPositionDTO">
        /* com.fw.core.mapper.db1.api.HhPositionMapper.updatePositionApplicant, 포지션 지원자 상태 변경, sjpaik, HhPositionMapper.xml */
        UPDATE position_applicant
           SET updatedAt = NOW()
             <if test="phoneOpened != null and phoneOpened != ''">, phoneOpened = #{phoneOpened}</if>
             <if test="receiptStatus != null and receiptStatus != ''">, receiptStatus = #{receiptStatus}</if>
             <if test="passedStatus != null and passedStatus != ''">, passedStatus = #{passedStatus}</if>
             <if test="progressStep != null and progressStep != ''">, progressStep = #{progressStep}</if>
             <if test="pmSubmitted != null and pmSubmitted != ''">, pmSubmitted = #{pmSubmitted}</if>
             <if test="submitResumeFileId != null and submitResumeFileId != ''">, submit_resume_file_id = #{submitResumeFileId}</if>
             <if test="processStatus != null and processStatus != ''">, processStatus = #{processStatus}</if>
             <if test="receiptPath != null and receiptPath != ''">, receiptPath = #{receiptPath}</if>
         WHERE id = #{id}
    </update>

    <!-- 고객사 인사담당자 리스트 조회 -->
    <select id="selectCompanyHrManagerList" parameterType="HhPositionDTO" resultType="HhPositionDTO">
        /* com.fw.core.mapper.db1.hh.HhPositionMapper.selectCompanyHrManagerList, 인사담당자 정보 조회, sjpaik, HhPositionMapper.xml */
        SELECT hm.id
             , hm.createdAt
             , hm.updatedAt
             , hm.name
             , hm.email
             , hm.phone
             , hm.workAddress
             , hm.hr_company_id
             , hm.delFlag
          FROM hr_manager AS hm
         WHERE hm.delFlag = 'N'
           AND hm.hr_company_id = (SELECT hr_company_id FROM position WHERE id = #{positionId})
    </select>

    <!-- 고객사 추천 메일 발송 이력 저장 -->
    <insert id="insertRecommendEmail" parameterType="HhPositionDTO">
        /* com.fw.core.mapper.db1.hh.HhPositionMapper.selectCompanyHrManagerList, 고객사 추천 메일 발송 이력 저장, sjpaik, HhPositionMapper.xml */
        INSERT INTO recommend_mail (
               createdAt
             , updatedAt
             , content
             , password
             , subject
             , position_id
             , delFlag
        ) VALUES (
               NOW()
             , #{updatedAt}
             , #{content}
             , #{password}
             , #{subject}
             , #{positionId}
             , 'N'
        )
        <selectKey order="AFTER" keyProperty="recommendId" resultType="String">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <!-- 고객사 추천 메일 발송 이력 조회 -->
    <select id="selectRecommendEmailDetail" parameterType="HhPositionDTO">
        /* com.fw.core.mapper.db1.hh.HhPositionMapper.selectRecommendEmailDetail, 고객사 추천 메일 발송 이력 조회, sjpaik, HhPositionMapper.xml */
        SELECT id
             , createdAt
             , updatedAt
             , content
             , password
             , subject
             , position_id
             , delFlag
          FROM recommend_mail
         WHERE id = #{recommendId}
    </select>

    <!-- 포지션 추천 중복여부 확인 -->
    <select id="selectRecommendDuplicate" parameterType="HhPositionDTO" resultType="boolean">
        /* com.fw.core.mapper.db1.hh.HhPositionMapper.selectRecommendDuplicate, 포지션 추천 중복여부 확인, YJW, HhPositionMapper.xml */
        SELECT EXISTS (
                       SELECT 1
                       FROM position_applicant
                       WHERE delFlag = 'N'
                         AND position_id = #{positionId}
                         AND hh_member_id = #{hhMemberId}
                         AND ap_member_id = #{apMemberId}
                   ) AS CNT
    </select>

    <!-- 포지션 삭제 -->
    <update id="updatePositionDelete" parameterType="HhPositionDTO">
        /* com.fw.core.mapper.db1.api.HhPositionMapper.updatePositionDelete, 포지션 삭제, sjpaik, HhPositionMapper.xml */
        UPDATE position
           SET deleted = 1
         WHERE id = #{id}
    </update>
    
    <!-- 이력서 보기 클릭시 열람내역 insert -->
    <update id="updateShowHist" parameterType="HhPositionDTO">
        /* com.fw.core.mapper.db1.api.HhPositionMapper.updateShowHist, 이력서 보기 클릭시 열람내역 insert, wsh, HhPositionMapper.xml */
        UPDATE position_applicant
           SET changeAt = NOW()
         WHERE id = #{id}
    </update>

    <!-- 포지션 금칙어 조회 -->
    <select id="selectPositionBanWordList" parameterType="HhPositionDTO" resultType="HhPositionDTO">
        /* com.fw.core.mapper.db1.api.HhPositionMapper.selectPositionBanWordList, 포지션 금칙어 조회, YJW, HhPositionMapper.xml */
        SELECT id
             , word
             , delFlag
        FROM position_ban_word
    </select>

    <!-- 종료 포지션 남은인원 조회 -->
    <select id="selectRemainNotFail" parameterType="HhPositionDTO" resultType="HhPositionDTO">
        /* com.fw.core.mapper.db1.api.HhPositionMapper.selectRemainNotFail, 종료 포지션 남은인원 조회, YJW, HhPositionMapper.xml */
        SELECT id
        FROM position_applicant
        WHERE position_id = #{id}
          AND progressStep NOT IN ('PASS','FAIL')
          AND processStatus NOT IN ('FAIL','DOCUMENT_FAIL')
    </select>

    <!-- 종료 포지션 남은인원 탈락처리 -->
    <update id="updateRemainFail" parameterType="HhPositionDTO">
        /* com.fw.core.mapper.db1.api.HhPositionMapper.updateRemainFail, 종료 포지션 남은인원 탈락처리, YJW, HhPositionMapper.xml */
        UPDATE position_applicant
          SET progressStep = #{progressStep}
        WHERE id = #{id}
    </update>
</mapper>